#! /usr/bin/env python2
import os
import sys

from psychopy import visual

from visigoth.commandline import define_parser
from visigoth.experiment import Experiment
from visigoth.stimuli import DummyStim


class BullsEye(object):

    def __init__(self, win):

        colors = [u'#35193e', u'#701f57', u'#ad1759',
                  u'#e13342', u'#f37651', u'#f6b48f']
        radii = [12, 10, 8, 6, 4, 2]

        self.stims = stims = []

        for color, radius in zip(colors, radii):

            stims.append(visual.Circle(
                win,
                radius,
                128,
                fillColor=color,
                lineColor="white"
            ))

            stims.append(visual.Circle(
                win,
                .5,
                128,
                pos=(radius - 1, 0),
                fillColor=win.background_color,
                lineColor=win.background_color,
            ))

            stims.append(visual.TextStim(
                win,
                radius,
                pos=(radius - 1, 0),
                color="white",
                height=.75,
            ))

    def draw(self):

        for stim in self.stims:
            stim.draw()


def create_stimuli(exp):

    fix = DummyStim()
    bullseye = BullsEye()

    return locals()


def generate_trials(exp):

    yield {}


def run_trial(exp, info):

    exp.wait_until("return", draw="bullseye", check_abort=True)


if __name__ == "__main__":

    # Parse the command lines to find study-specific code
    parser = define_parser("visigoth")
    args, _ = parser.parse_known_args()
    sys.path.insert(0, os.path.realpath(args.study_dir))

    Experiment.create_stimuli = create_stimuli
    Experiment.generate_trials = generate_trials
    Experiment.run_trial = run_trial

    # Start the expeiment
    e = Experiment(sys.argv[1:])
    e.run()
